{"version":3,"file":"component---src-templates-blog-template-js-710921297ed45a23bbba.js","mappings":"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","sources":["webpack://AlwaysWithTech/./src/components/post-header/index.js","webpack://AlwaysWithTech/./src/components/post-navigator/index.js","webpack://AlwaysWithTech/./src/components/post-content/index.js","webpack://AlwaysWithTech/./src/components/utterances/index.js","webpack://AlwaysWithTech/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { useEffect } from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post }) {\n  useEffect(() => {\n    // 광고 스크립트가 이미 페이지에 삽입되어 있는지 확인\n    const existingScript = document.querySelector(`script[src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"]`);\n    \n    if (!existingScript) {\n      // 광고 스크립트가 없으면 새로 추가\n      const script = document.createElement('script');\n      script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n      script.async = true;\n      script.crossOrigin = 'anonymous';\n      document.body.appendChild(script);\n    }\n\n    // 광고 초기화\n    try {\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\n    } catch (e) {\n      console.error('AdSense error:', e);\n    }\n  }, []);\n\n\n  return (\n    <header className=\"post-header\">\n      <ins className=\"adsbygoogle\"\n            style={{ display: 'block' }}\n            data-ad-client=\"ca-pub-1067668052326016\"\n            data-ad-slot=\"7030651089\"\n            data-ad-format=\"auto\"\n            data-full-width-responsive=\"true\"></ins>\n      {/* {post.emoji && <div className=\"emoji\">{post.emoji}</div>} */}\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"categories\">\n          {post.categories.map((category) => (\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\n              {category}\n            </Link>\n          ))}\n        </div>\n      </div>    \n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React, { useEffect } from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n    // 광고 스크립트를 동적으로 추가하는 useEffect 훅\n    useEffect(() => {\n      // 광고 스크립트가 이미 페이지에 삽입되어 있는지 확인\n      const existingScript = document.querySelector(`script[src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"]`);\n      \n      if (!existingScript) {\n        // 광고 스크립트가 없으면 새로 추가\n        const script = document.createElement('script');\n        script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n        script.async = true;\n        script.crossOrigin = 'anonymous';\n        document.body.appendChild(script);\n      }\n  \n      // 광고 초기화\n      try {\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\n      } catch (e) {\n        console.error('AdSense error:', e);\n      }\n    }, []);\n    \n  return (\n    <>\n    \n    <div className=\"post-navigator\">        \n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <ins className=\"adsbygoogle\"\n      style={{ display: 'block' }}\n      data-ad-format=\"autorelaxed\"\n      data-ad-client=\"ca-pub-1067668052326016\"\n      data-ad-slot=\"8256651582\"></ins>         \n    </div>\n  \n    </>\n  );\n}\n\nexport default PostNavigator;\n","import React, { useEffect } from 'react';\nimport './style.scss';\n\n\nfunction PostContent({ html }) {\n  useEffect(() => {\n    // 광고 스크립트가 이미 페이지에 삽입되어 있는지 확인\n    const existingScript = document.querySelector(`script[src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"]`);\n    \n    if (!existingScript) {\n      // 광고 스크립트가 없으면 새로 추가\n      const script = document.createElement('script');\n      script.src = 'https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';\n      script.async = true;\n      script.crossOrigin = 'anonymous';\n      document.body.appendChild(script);\n    }\n\n    // 광고 초기화\n    try {\n      (window.adsbygoogle = window.adsbygoogle || []).push({});\n    } catch (e) {\n      console.error('AdSense error:', e);\n    }\n  }, []);\n\n  return (\n    <div className=\"post-content\">    \n      {/* Google AdSense 광고 슬롯 */}\n      <ins className=\"adsbygoogle\"\n            style={{ display: 'block' }}\n            data-ad-client=\"ca-pub-1067668052326016\"\n            data-ad-slot=\"7030651089\"\n            data-ad-format=\"auto\"\n            data-full-width-responsive=\"true\"></ins>\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n      <ins className=\"adsbygoogle\"\n            style={{ display: 'block' }}\n            data-ad-format=\"autorelaxed\"\n            data-ad-client=\"ca-pub-1067668052326016\"\n            data-ad-slot=\"8256651582\"></ins>\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { createRef, useEffect, useRef } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst branch = 'master';\n\nfunction Utterances({ repo, path }) {\n  const rootElm = createRef();\n  const isUtterancesLoaded = useRef(false);\n\n  useEffect(() => {\n    if (!rootElm.current || isUtterancesLoaded.current) return;\n    const storedIsDarkMode = localStorage.getItem('isDarkMode');\n\n    const utterances = document.createElement('script');\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: JSON.parse(storedIsDarkMode) ? 'photon-dark' : 'github-light',\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    };\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey]);\n    });\n    rootElm.current.appendChild(utterances);\n    isUtterancesLoaded.current = true;\n  }, [repo, rootElm, path]);\n\n  return <div className=\"utterances\" ref={rootElm} />;\n}\n\nexport default Utterances;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Utterances from '../components/utterances';\n\nfunction BlogTemplate({ data }) {\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { comments } = data.site?.siteMetadata;\n  const utterancesRepo = comments?.utterances?.repo;\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      {utterancesRepo && <Utterances repo={utterancesRepo} path={curPost.slug} />}\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji \n        cover        \n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji        \n        cover\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji       \n        cover \n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          utterances {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","useEffect","document","querySelector","script","createElement","src","async","crossOrigin","body","appendChild","window","adsbygoogle","push","e","console","error","React","className","style","display","title","categories","map","category","Link","key","to","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","repo","path","rootElm","createRef","isUtterancesLoaded","useRef","current","storedIsDarkMode","localStorage","getItem","utterances","utterancesConfig","branch","theme","JSON","parse","label","crossorigin","Object","keys","forEach","configKey","setAttribute","ref","_data$site","_comments$utterances","data","curPost","Post","cur","prev","next","comments","site","siteMetadata","utterancesRepo","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Utterances"],"sourceRoot":""}