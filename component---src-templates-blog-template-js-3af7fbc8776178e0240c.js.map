{"version":3,"file":"component---src-templates-blog-template-js-3af7fbc8776178e0240c.js","mappings":"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","sources":["webpack://AlwaysWithTech/./src/components/post-header/index.js","webpack://AlwaysWithTech/./src/components/post-navigator/index.js","webpack://AlwaysWithTech/./src/components/post-content/index.js","webpack://AlwaysWithTech/./src/components/utterances/index.js","webpack://AlwaysWithTech/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post }) {\n  return (\n    <header className=\"post-header\">\n      {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\n      <div className=\"info\">\n        <div className=\"categories\">\n          {post.categories.map((category) => (\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\n              {category}\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"post-navigator\">\n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostNavigator;\n","import React, { useEffect } from 'react';\nimport './style.scss';\n\n\nfunction PostContent({ html }) {\n\n  useEffect(() => {\n    try {\n      (adsbygoogle = window.adsbygoogle || []).push({});\n    } catch (e) {\n      console.error(e);\n    }\n  }, [])\n\n\n  return (\n    <div className=\"post-content\">    \n      {/* Google AdSense 광고 슬롯 */}\n      <ins className=\"adsbygoogle\"\n            style={{ display: 'block' }}\n            data-ad-client=\"ca-pub-1067668052326016\"\n            data-ad-slot=\"7030651089\"\n            data-ad-format=\"auto\"\n            data-full-width-responsive=\"true\"></ins>\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { createRef, useEffect, useRef } from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst branch = 'master';\n\nfunction Utterances({ repo, path }) {\n  const rootElm = createRef();\n  const isUtterancesLoaded = useRef(false);\n\n  useEffect(() => {\n    if (!rootElm.current || isUtterancesLoaded.current) return;\n    const storedIsDarkMode = localStorage.getItem('isDarkMode');\n\n    const utterances = document.createElement('script');\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: JSON.parse(storedIsDarkMode) ? 'photon-dark' : 'github-light',\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    };\n\n    Object.keys(utterancesConfig).forEach((configKey) => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey]);\n    });\n    rootElm.current.appendChild(utterances);\n    isUtterancesLoaded.current = true;\n  }, [repo, rootElm, path]);\n\n  return <div className=\"utterances\" ref={rootElm} />;\n}\n\nexport default Utterances;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Utterances from '../components/utterances';\n\nfunction BlogTemplate({ data }) {\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { comments } = data.site?.siteMetadata;\n  const utterancesRepo = comments?.utterances?.repo;\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      {utterancesRepo && <Utterances repo={utterancesRepo} path={curPost.slug} />}\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji \n        cover        \n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji        \n        cover\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji       \n        cover \n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          utterances {\n            repo\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","React","className","emoji","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","useEffect","adsbygoogle","window","push","e","console","error","style","display","dangerouslySetInnerHTML","__html","repo","path","rootElm","createRef","isUtterancesLoaded","useRef","current","storedIsDarkMode","localStorage","getItem","utterances","document","createElement","utterancesConfig","src","branch","theme","JSON","parse","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","appendChild","ref","_data$site","_comments$utterances","data","curPost","Post","cur","prev","next","comments","site","siteMetadata","utterancesRepo","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Utterances"],"sourceRoot":""}